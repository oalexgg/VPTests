{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/social-sharing/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin } from '@ionic-native/core';\r\n\r\n\r\n/**\r\n * @name Social Sharing\r\n * @description\r\n * Share text, files, images, and links via social networks, sms, and email.\r\n * @usage\r\n * ```typescript\r\n * import { SocialSharing } from '@ionic-native/social-sharing';\r\n *\r\n * constructor(private socialSharing: SocialSharing) { }\r\n *\r\n * ...\r\n *\r\n * // Check if sharing via email is supported\r\n * this.socialSharing.canShareViaEmail().then(() => {\r\n *   // Sharing via email is possible\r\n * }).catch(() => {\r\n *   // Sharing via email is not possible\r\n * });\r\n *\r\n * // Share via email\r\n * this.socialSharing.shareViaEmail('Body', 'Subject', 'recipient@example.org').then(() => {\r\n *   // Success!\r\n * }).catch(() => {\r\n *   // Error!\r\n * });\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'SocialSharing',\r\n  plugin: 'cordova-plugin-x-socialsharing',\r\n  pluginRef: 'plugins.socialsharing',\r\n  repo: 'https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin',\r\n  platforms: ['iOS', 'Android', 'Windows Phone']\r\n})\r\n\r\nexport class SocialSharing {\r\n  /**\r\n   * Shares using the share sheet\r\n   * @param message {string} The message you would like to share.\r\n   * @param subject {string} The subject\r\n   * @param file {string|string[]} URL(s) to file(s) or image(s), local path(s) to file(s) or image(s), or base64 data of an image. Only the first file/image will be used on Windows Phone.\r\n   * @param url {string} A URL to share\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  share(message?: string, subject?: string, file?: string|string[], url?: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Shares using the share sheet with additional options and returns a result object or an error message (requires plugin version 5.1.0+)\r\n   * @param options {object} The options object with the message, subject, files, url and chooserTitle properties.\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  shareWithOptions(options: { message?: string, subject?: string, files?: string|string[], url?: string, chooserTitle?: string }): Promise<any> { return; }\r\n\r\n  /**\r\n   * Checks if you can share via a specific app.\r\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\r\n   * @param message {string}\r\n   * @param subject {string}\r\n   * @param image {string}\r\n   * @param url {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    successIndex: 5,\r\n    errorIndex: 6,\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  canShareVia(appName: string, message?: string, subject?: string, image?: string, url?: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Shares directly to Twitter\r\n   * @param message {string}\r\n   * @param image {string}\r\n   * @param url {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    successIndex: 3,\r\n    errorIndex: 4,\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  shareViaTwitter(message: string, image?: string, url?: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Shares directly to Facebook\r\n   * @param message {string}\r\n   * @param image {string}\r\n   * @param url {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    successIndex: 3,\r\n    errorIndex: 4,\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  shareViaFacebook(message: string, image?: string, url?: string): Promise<any> { return; }\r\n\r\n\r\n  /**\r\n   * Shares directly to Facebook with a paste message hint\r\n   * @param message {string}\r\n   * @param image {string}\r\n   * @param url {string}\r\n   * @param pasteMessageHint {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    successIndex: 4,\r\n    errorIndex: 5,\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  shareViaFacebookWithPasteMessageHint(message: string, image?: string, url?: string, pasteMessageHint?: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Shares directly to Instagram\r\n   * @param message {string}\r\n   * @param image {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  shareViaInstagram(message: string, image: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Shares directly to WhatsApp\r\n   * @param message {string}\r\n   * @param image {string}\r\n   * @param url {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    successIndex: 3,\r\n    errorIndex: 4,\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  shareViaWhatsApp(message: string, image?: string, url?: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Shares directly to a WhatsApp Contact\r\n   * @param receiver {string} Pass phone number on Android, and Addressbook ID (abid) on iOS\r\n   * @param message {string} Message to send\r\n   * @param image {string} Image to send (does not work on iOS\r\n   * @param url {string} Link to send\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    successIndex: 4,\r\n    errorIndex: 5,\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  shareViaWhatsAppToReceiver(receiver: string, message: string, image?: string, url?: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Share via SMS\r\n   * @param messge {string} message to send\r\n   * @param phoneNumber {string} Number or multiple numbers seperated by commas\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  shareViaSMS(messge: string, phoneNumber: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Checks if you can share via email\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  canShareViaEmail(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Share via Email\r\n   * @param message {string}\r\n   * @param subject {string}\r\n   * @param to {string[]}\r\n   * @param cc {string[]} Optional\r\n   * @param bcc {string[]} Optional\r\n   * @param files {string|string[]} Optional URL or local path to file(s) to attach\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS', 'Android'],\r\n    successIndex: 6,\r\n    errorIndex: 7\r\n  })\r\n  shareViaEmail(message: string, subject: string, to: string[], cc?: string[], bcc?: string[], files?: string|string[]): Promise<any> { return; }\r\n\r\n  /**\r\n   * Share via AppName\r\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\r\n   * @param message {string}\r\n   * @param subject {string}\r\n   * @param image {string}\r\n   * @param url {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    successIndex: 5,\r\n    errorIndex: 6,\r\n    platforms: ['iOS', 'Android']\r\n  })\r\n  shareVia(appName: string, message: string, subject?: string, image?: string, url?: string): Promise<any> { return; }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}